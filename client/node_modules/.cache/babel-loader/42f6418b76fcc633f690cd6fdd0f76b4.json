{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmailAndPassword() {\n  try {\n    const emailAndPassword = auth.signInWithEmailAndPassword(email, password);\n    yield put(emailSignInSuccess(emailAndPassword));\n  } catch (error) {\n    yield put(emailSignInFailure(error));\n  }\n}\nexport function* onEmailAndPasswordSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailAndPasswordSignInStart)]);\n}","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmailAndPassword","emailAndPassword","email","password","onEmailAndPasswordSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,EAAeC,cAAf,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAoDC,kBAApD,EAAwEC,kBAAxE,QAAkG,gBAAlG;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AACnC,MAAI;AACH,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BM,IAA5B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAACU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AAAsB,SAAGF,YAAY,CAACG,IAAb;AAAzB,KAAD,CAApB,CAAT;AACA,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACtC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACA;AAGD,OAAO,UAAUW,0BAAV,GAAuC;AAC7C,MAAI;AACH,UAAMC,gBAAgB,GAAGnB,IAAI,CAACkB,0BAAL,CAAgCE,KAAhC,EAAsCC,QAAtC,CAAzB;AACA,UAAMzB,GAAG,CAACS,kBAAkB,CAACc,gBAAD,CAAnB,CAAT;AACA,GAHD,CAGE,OAAOJ,KAAP,EAAc;AACf,UAAMnB,GAAG,CAACU,kBAAkB,CAACS,KAAD,CAAnB,CAAT;AACA;AACD;AAED,OAAO,UAAUO,6BAAV,GAA0C;AAChD,QAAM3B,UAAU,CAACI,eAAe,CAACwB,mBAAjB,EAAsCL,0BAAtC,CAAhB;AACA;AAGD,OAAO,UAAUM,SAAV,GAAsB;AAC5B,QAAM3B,GAAG,CAAC,CACTC,IAAI,CAACkB,mBAAD,CADK,EAETlB,IAAI,CAACwB,6BAAD,CAFK,CAAD,CAAT;AAIA","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure , emailSignInSuccess, emailSignInFailure } from './user.actions';\n\nexport function* signInWithGoogle() {\n\ttry {\n\t\tconst {user} = yield auth.signInWithPopup(googleProvider) \n\t\tconst userRef = yield call(createUserProfileDocument, user)\n\t\tconst userSnapshot = yield userRef.get()\n\t\tyield put(googleSignInSuccess({id: userSnapshot.id, ...userSnapshot.data()}))\n\t} catch (error) {\n\t\tyield put(googleSignInFailure(error))\n\t}\n}\n\nexport function* onGoogleSignInStart() {\n\tyield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle)\n}\n\n\nexport function* signInWithEmailAndPassword() {\n\ttry {\n\t\tconst emailAndPassword = auth.signInWithEmailAndPassword(email,password)\n\t\tyield put(emailSignInSuccess(emailAndPassword))\n\t} catch (error) {\n\t\tyield put(emailSignInFailure(error))\n\t}\n}\n\nexport function* onEmailAndPasswordSignInStart() {\n\tyield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmailAndPassword)\n}\n\n\nexport function* userSagas() {\n\tyield all([\n\t\tcall(onGoogleSignInStart), \n\t\tcall(onEmailAndPasswordSignInStart)\n\t])\n}"]},"metadata":{},"sourceType":"module"}