{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDuDDKGmBxpYR2SfWy18Tys8WhJBFCgv7k\",\n  authDomain: \"hontey-db.firebaseapp.com\",\n  databaseURL: \"https://hontey-db.firebaseio.com\",\n  projectId: \"hontey-db\",\n  storageBucket: \"hontey-db.appspot.com\",\n  messagingSenderId: \"1008259579892\",\n  appId: \"1:1008259579892:web:c4e4a621d559c2e74e43a1\",\n  measurementId: \"G-JRMDSFYSZZ\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Google Sign In Authentication\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACdC,EAAAA,MAAM,EAAE,yCADM;AAEdC,EAAAA,UAAU,EAAE,2BAFE;AAGdC,EAAAA,WAAW,EAAE,kCAHC;AAIdC,EAAAA,SAAS,EAAE,WAJG;AAKdC,EAAAA,aAAa,EAAE,uBALD;AAMdC,EAAAA,iBAAiB,EAAE,eANL;AAOdC,EAAAA,KAAK,EAAE,4CAPO;AAQdC,EAAAA,aAAa,EAAE;AARD,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC5E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACrB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACH,YAAMV,OAAO,CAACW,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,SAHiB;AAIjB,WAAGV;AAJc,OAAZ,CAAN;AAMA,KAPD,CAOE,OAAOa,KAAP,EAAc;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACA;AACD;;AAED,SAAOf,OAAP;AACA,CAvBM;AAyBP,OAAO,MAAMgB,yBAAyB,GAAG,OAAOC,aAAP,EAAsBC,YAAtB,KAAuC;AAC/E,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AAEA,QAAMI,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,GAAG,IAAI;AAC3B,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AACAmB,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAoBD,GAApB;AACA,GAHD;AAKA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACA,CAVM;AAYP,OAAO,MAAMC,IAAI,GAAGxC,QAAQ,CAACwC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB,C,CAEP;;AACA,MAAM0B,QAAQ,GAAG,IAAIzC,QAAQ,CAACwC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAE;AAAT,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAezC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n\tapiKey: \"AIzaSyDuDDKGmBxpYR2SfWy18Tys8WhJBFCgv7k\",\n\tauthDomain: \"hontey-db.firebaseapp.com\",\n\tdatabaseURL: \"https://hontey-db.firebaseio.com\",\n\tprojectId: \"hontey-db\",\n\tstorageBucket: \"hontey-db.appspot.com\",\n\tmessagingSenderId: \"1008259579892\",\n\tappId: \"1:1008259579892:web:c4e4a621d559c2e74e43a1\",\n\tmeasurementId: \"G-JRMDSFYSZZ\"\n}\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\tif (!userAuth) return;\n\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\tconst snapShot = await userRef.get()\n\n\tif (!snapShot.exists) {\n\t\tconst {displayName, email} = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalData\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('error creating user', error.message)\n\t\t}\n\t}\n\t\n\treturn userRef\n} \n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n\tconst collectionRef = firestore.collection(collectionKey)\n\n\tconst batch = firestore.batch()\n\tobjectsToAdd.forEach(obj => {\n\t\tconst newDocRef = collectionRef.doc()\n\t\tbatch.set(newDocRef,obj)\n\t})\n\n\treturn await batch.commit()\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\n// Google Sign In Authentication\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({prompt: 'select_account'})\nexport const signInWithGoogle = () => auth.signInWithPopup(provider)\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}