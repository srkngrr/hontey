{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore'; // For database\n\nimport 'firebase/auth'; // For authentication\n// Configuration data which we took from Firebase\n\nconst config = {\n  apiKey: \"AIzaSyDuDDKGmBxpYR2SfWy18Tys8WhJBFCgv7k\",\n  authDomain: \"hontey-db.firebaseapp.com\",\n  databaseURL: \"https://hontey-db.firebaseio.com\",\n  projectId: \"hontey-db\",\n  storageBucket: \"hontey-db.appspot.com\",\n  messagingSenderId: \"1008259579892\",\n  appId: \"1:1008259579892:web:c4e4a621d559c2e74e43a1\",\n  measurementId: \"G-JRMDSFYSZZ\"\n};\nfirebase.initializeApp(config); // Creating User Profile\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n}; // We can use this function to add collection and documents into firestore\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((acc, collection) => {\n    acc[collection.title.toLowerCase()] = collection;\n    return acc;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // Google Sign In Authentication\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","acc","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore'; // For database\nimport 'firebase/auth'; // For authentication\n\n// Configuration data which we took from Firebase\nconst config = {\n\tapiKey: \"AIzaSyDuDDKGmBxpYR2SfWy18Tys8WhJBFCgv7k\",\n\tauthDomain: \"hontey-db.firebaseapp.com\",\n\tdatabaseURL: \"https://hontey-db.firebaseio.com\",\n\tprojectId: \"hontey-db\",\n\tstorageBucket: \"hontey-db.appspot.com\",\n\tmessagingSenderId: \"1008259579892\",\n\tappId: \"1:1008259579892:web:c4e4a621d559c2e74e43a1\",\n\tmeasurementId: \"G-JRMDSFYSZZ\"\n}\n\nfirebase.initializeApp(config);\n\n// Creating User Profile\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n\tif (!userAuth) return;\n\n\tconst userRef = firestore.doc(`users/${userAuth.uid}`);\n\tconst snapShot = await userRef.get()\n\n\tif (!snapShot.exists) {\n\t\tconst {displayName, email} = userAuth;\n\t\tconst createdAt = new Date();\n\n\t\ttry {\n\t\t\tawait userRef.set({\n\t\t\t\tdisplayName,\n\t\t\t\temail,\n\t\t\t\tcreatedAt,\n\t\t\t\t...additionalData\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.log('error creating user', error.message)\n\t\t}\n\t}\n\t\n\treturn userRef\n} \n\n// We can use this function to add collection and documents into firestore\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n\tconst collectionRef = firestore.collection(collectionKey)\n\n\tconst batch = firestore.batch()\n\tobjectsToAdd.forEach(obj => {\n\t\tconst newDocRef = collectionRef.doc()\n\t\tbatch.set(newDocRef,obj)\n\t})\n\n\treturn await batch.commit()\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n\tconst transformedCollection = collections.docs.map(doc => {\n\t\tconst {title, items} = doc.data()\n\t\treturn {\n\t\t\trouteName: encodeURI(title.toLowerCase()),\n\t\t\tid: doc.id,\n\t\t\ttitle,\n\t\t\titems\n\t\t}\n\t})\n\n\treturn transformedCollection.reduce((acc, collection) => {\n\t\tacc[collection.title.toLowerCase()] = collection;\n\t\treturn acc\n\t} , {})\n}\n\nexport const getCurrentUser = () => {\n\treturn new Promise((resolve,reject) => {\n\t\tconst unsubscribe = auth.onAuthStateChanged(userAuth => {\n\t\t\tunsubscribe()\n\t\t\tresolve(userAuth)\n\t\t}, reject)\n\t})\n}\n\nexport const auth = firebase.auth()\nexport const firestore = firebase.firestore()\n\n// Google Sign In Authentication\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account'})\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider)\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}