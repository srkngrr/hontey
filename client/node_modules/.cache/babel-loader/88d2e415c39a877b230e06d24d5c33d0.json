{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // collectionRef\n  // \t.get()\n  // \t.then(snapshot => {\n  // \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  // \t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n  // \t})\n  // \t.catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAkE,gBAAlE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACH,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,GAJD,CAIE,OAAOG,KAAP,EAAc,CAEf,CATuC,CAavC;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMjB,SAAS,CAACO,eAAe,CAACW,uBAAjB,EAA0CV,qBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure  } from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n\tyield console.log('I am fired')\n\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections')\n\t\tconst snapshot = yield collectionRef.get()\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\t\n\t} catch (error) {\n\n\t}\n\n\n\n\t\t// collectionRef\n\t\t// \t.get()\n\t\t// \t.then(snapshot => {\n\t\t// \t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n\t\t// \t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n\t\t// \t})\n\t\t// \t.catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync )\n}"]},"metadata":{},"sourceType":"module"}