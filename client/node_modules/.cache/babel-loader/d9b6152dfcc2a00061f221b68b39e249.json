{"ast":null,"code":"import ShopActionTypes from './shop.types';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // Because of redux-thunk middleware -> function returns a function that get access to dispatch\n// export const fetchCollectionsStartAsync = () => {\n// \treturn dispatch => {\n// \t\tconst collectionRef = firestore.collection('collections')\n// \t\tdispatch(fetchCollectionsStart())\n// \t\tcollectionRef\n// \t\t\t.get()\n// \t\t\t.then(snapshot => {\n// \t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n// \t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n// \t\t\t})\n// \t\t\t.catch(error => dispatch(fetchCollectionsFailure(error.message)))\n// \t}\n// }","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC3CC,EAAAA,IAAI,EAAEF,eAAe,CAACG;AADqB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAqB;AAC3DH,EAAAA,IAAI,EAAEF,eAAe,CAACM,yBADqC;AAE3DC,EAAAA,OAAO,EAAEF;AAFkD,CAArB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACzDP,EAAAA,IAAI,EAAEF,eAAe,CAACU,yBADmC;AAEzDH,EAAAA,OAAO,EAAEE;AAFgD,CAAnB,CAAhC,C,CAKP;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types';\n\nexport const fetchCollectionsStart = () => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n\tpayload: collectionsMap\n})\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n\ttype: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n\tpayload: errorMessage\n})\n\n// Because of redux-thunk middleware -> function returns a function that get access to dispatch\n// export const fetchCollectionsStartAsync = () => {\n// \treturn dispatch => {\n// \t\tconst collectionRef = firestore.collection('collections')\n// \t\tdispatch(fetchCollectionsStart())\n\n// \t\tcollectionRef\n// \t\t\t.get()\n// \t\t\t.then(snapshot => {\n// \t\t\t\tconst collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n// \t\t\t\tdispatch(fetchCollectionsSuccess(collectionsMap))\n// \t\t\t})\n// \t\t\t.catch(error => dispatch(fetchCollectionsFailure(error.message)))\n// \t}\n// }\n\n\n"]},"metadata":{},"sourceType":"module"}