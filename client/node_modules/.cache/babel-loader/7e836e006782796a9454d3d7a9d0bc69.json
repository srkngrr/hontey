{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  // generator function\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap)); // dispatch\t\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas","all"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAkE,gBAAlE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAAE;AAC1C,MAAI;AACH,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMT,GAAG,CAACG,uBAAuB,CAACQ,cAAD,CAAxB,CAAT,CAJG,CAIgD;AACnD,GALD,CAKE,OAAOC,KAAP,EAAc;AACf,UAAMZ,GAAG,CAACI,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACA;AACD;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMhB,UAAU,CAACO,eAAe,CAACU,uBAAjB,EAA0CT,qBAA1C,CAAhB;AACA;AAGD,OAAO,UAAUU,SAAV,GAAsB;AAC5B,QAAMC,GAAG,CAAC,CACTlB,IAAI,CAACe,qBAAD,CADK,CAAD,CAAT;AAGA","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure  } from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() { // generator function\n\ttry {\n\t\tconst collectionRef = firestore.collection('collections');\n\t\tconst snapshot = yield collectionRef.get();\n\t\tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\t\tyield put(fetchCollectionsSuccess(collectionsMap)) // dispatch\t\n\t} catch (error) {\n\t\tyield put(fetchCollectionsFailure(error.message))\n\t}\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync)\n}\n\n\nexport function* shopSagas() {\n\tyield all([\n\t\tcall(fetchCollectionsStart)\n\t])\n}"]},"metadata":{},"sourceType":"module"}