{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  // generator function\n  yield console.log('i am fired'); // try {\n  // \tconst collectionRef = firestore.collection('collections')\n  // \tconst snapshot = yield collectionRef.get()\n  // \tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  // \tyield put(fetchCollectionsSuccess(collectionsMap)) // dispatch\t\n  // } catch (error) {\n  // \tyield put(fetchCollectionsFailure(collectionsMap))\n  // }\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/Gurer/Desktop/Git-Hub/hontey/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAkE,gBAAlE;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AAAE;AAC1C,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN,CADwC,CAGxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACxC,QAAMX,SAAS,CAACO,eAAe,CAACK,uBAAjB,EAA0CJ,qBAA1C,CAAf;AACA","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure  } from './shop.actions'\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() { // generator function\n\tyield console.log('i am fired')\n\n\t// try {\n\t// \tconst collectionRef = firestore.collection('collections')\n\t// \tconst snapshot = yield collectionRef.get()\n\t// \tconst collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n\t// \tyield put(fetchCollectionsSuccess(collectionsMap)) // dispatch\t\n\t// } catch (error) {\n\t// \tyield put(fetchCollectionsFailure(collectionsMap))\n\t// }\n}\n\nexport function* fetchCollectionsStart() {\n\tyield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync )\n}"]},"metadata":{},"sourceType":"module"}